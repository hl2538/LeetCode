/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if((l1==null)&&(l2==null))return null;
        if((l1==null)&&(l2!=null))return l2;
        if((l1!=null)&&(l2==null))return l1;
        ListNode pointer;
        ListNode head;
        if(l1.val<=l2.val){
            head = l1;
            pointer = l1;
            l1 = l1.next;
        }
        else{
            head = l2;
            pointer = l2;
            l2 = l2.next;
        }
        while((l1!=null)&&(l2!=null)){
            if(l1.val<=l2.val){
                pointer.next = l1;
                l1 = l1.next;
                pointer = pointer.next;
            }
            else{
                pointer.next = l2;
                l2 = l2.next;
                pointer = pointer.next;
            }
        }
        
        if(l1==null){
            pointer.next = l2;
        }
        if(l2==null){
            pointer.next = l1;
        }
        return head;
    }
}
